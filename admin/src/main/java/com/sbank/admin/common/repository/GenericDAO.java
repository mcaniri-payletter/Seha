package com.sbank.admin.common.repository;

import org.apache.ibatis.session.ResultHandler;
import java.util.List;

/**---------------------------------------------------------------------
 *  ■제네릭 타입 Dao(Repository) 인터페이스 <파라미터타입,리턴타입> ■payletter ■2018. 9. 28.
 ----------------------------------------------------------------------**/
public interface GenericDAO<T, R> {
    /**---------------------------------------------------------------------
     *  ■DB에 Query를 보내 리스트를 리턴받음(파라미터 없음) ■payletter ■2018. 9. 28.
     ----------------------------------------------------------------------**/
    List<R> selectList(String sqlId);

    /**---------------------------------------------------------------------
     *  ■DB에 Query를 보내 리스트를 리턴받음 ■payletter ■2018. 9. 28.
     ----------------------------------------------------------------------**/
    List<R> selectList(String sqlId, T param);

    /**---------------------------------------------------------------------
     *  ■DB에 Query를 보내 단일 Row를 리턴받음(파라미터 없음) ■payletter ■2018. 9. 28.
     ----------------------------------------------------------------------**/
    R selectOne(String sqlId);

    /**---------------------------------------------------------------------
     *  ■DB에 Query를 보내 단일 Row를 리턴받음 ■payletter ■2018. 9. 28.
     ----------------------------------------------------------------------**/
    R selectOne(String sqlId, T param);

    /**---------------------------------------------------------------------*
     *  DB에 Query를 보내 Insert를 수행하고 결과를 int로 받음(파라미터 없음) ■payletter ■2018. 9. 28.
     ----------------------------------------------------------------------**/
    int insert(String sqlId);

    /**---------------------------------------------------------------------
     * ■DB에 Query를 보내 Insert를 수행하고 결과를 int로 받음 ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/
    int insert(String sqlId, T param);

    /**---------------------------------------------------------------------*
     * ■DB에 Query를 보내 Update를 수행하고 결과를 int로 받음(파라미터 없음) ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/
    int update(String sqlId);

    /**---------------------------------------------------------------------*
     * ■DB에 Query를 보내 Update를 수행하고 결과를 int로 받음 ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/
    int update(String sqlId, T param);

    /**---------------------------------------------------------------------*
     * ■DB에 Query를 보내 Delete를 수행하고 결과를 int로 받음(파라미터 없음) ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/
    int delete(String sqlId);

    /**---------------------------------------------------------------------*
     * ■DB에 Query를 보내 Delete를 수행하고 결과를 int로 받음 ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/
    int delete(String sqlId, T param);

    /**---------------------------------------------------------------------*
     * ■DB에 Query를 보내 리스트를 리턴받음  ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/
    void select(String sqlId, T params, @SuppressWarnings("rawtypes") ResultHandler objHandler);

    /**---------------------------------------------------------------------*
     * ■DB에 Query를 보내 단일 Row를 리턴받음  ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/
    R batchSelectOne(String sqlId, T param);

    /**---------------------------------------------------------------------*
     * ■DB에 Query를 보내 리스트를 리턴받음  ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/
    List<R> batchSelectList(String sqlId, T param);

    /**---------------------------------------------------------------------*
     * ■DB에 Query를 보내 Delete를 수행하고 결과를 int로 받음(배치)  ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/
    int batchDelete(String sqlId, T param);

    /**---------------------------------------------------------------------*
     * ■DB에 Query를 보내 Update를 수행하고 결과를 int로 받음(배치) ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/

    int batchUpdate(String sqlId, T param);

    /**---------------------------------------------------------------------*
     * ■DB에 Query를 보내 Insert를 수행하고 결과를 int로 받음(배치) ■payletter ■2018. 03. 09.
     * ----------------------------------------------------------------------**/
    int batchInsert(String sqlId, T param);

    /**---------------------------------------------------------------------*
     * ■StatementList에 쌓인 statement를 실행(executeBatch) ■payletter ■2018. 9. 28.
     * ----------------------------------------------------------------------**/
    void batchFlushStatements();
}
